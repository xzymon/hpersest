v 0.0.4-SNAPSHOT2 development of purchases started

v 0.0.4-SNAPSHOT1 products CR works
 - added view /products.xhtml
 - added view /product-create.xhtml [uses converters for Category & Unit]

v 0.0.4 categories & units CRUD works
 - added view /category-update.xhtml
 - added view /unit-create.xhtml
 - added view /unit-update.xhtml

v 0.0.3 stores CRUD works
 - renamed view /stores-create.xhtml to /store-create.xhtml
 - added view /store-update.xhtml
 - renamed view /categories-create.xhtml to /category-create.xhtml

v 0.0.2-SNAPSHOT4 updating from tests view
 - analyse task flow - how does it work, and why it works different from intention

v 0.0.2-SNAPSHOT3 store update problem
 - WHY action which should cause StoreBean.updateStore() does StoreBean.createStore() instead ?

v 0.0.2-SNAPSHOT2
 - using ServletContext (instead of FacesContext) to get Session from ServletContext attributes map
 - using injected Logger to log from StoreBean

v 0.0.2-SNAPSHOT1
 - package-level hibernate sequence XZYMON_SEQUENCE
 - added view /categories.xhtml
 - added view /categories-create.xhtml
 - added view /stores.xhtml
 - added view /stores-create.xhtml
 - added view /units.xhtml

v 0.0.1
Project initialized
 - Servlet 3.0 + Hibernate 4.3.8 + CDI 1.2 + JSF 2.2 ( + LogBack 1.1.3)
 - com.xzymon.hpersest.util.AppConstants defines application constants
 - Hibernate SessionFactory is created by com.xzymon.hpersest.util.HibernateSessionFactoryListener.contextInitialized() [which implements SessionContextListener]
 - Hibernate SessionFactory is registered in ServletContext with constant: AppConstants.HIBERNATE_SESSION_FACTORY_ATTR_NAME
 - CDI can inject following Resources (annotated @RequestScoped) with @Inject: FacesContext (from JSF), Session (from Hibernate)